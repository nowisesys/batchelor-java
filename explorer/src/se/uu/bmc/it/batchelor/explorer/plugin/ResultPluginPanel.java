/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ResultPluginPanel.java
 *
 * Created on Aug 11, 2010, 5:11:46 PM
 */
package se.uu.bmc.it.batchelor.explorer.plugin;

import javax.swing.JPanel;
import se.uu.bmc.it.batchelor.explorer.plugin.spi.PluginData;

/**
 *
 * @author Anders LÃ¶vgren (QNET/BMC CompDept)
 */
public class ResultPluginPanel extends JPanel implements PluginPanelInterface {

    private PluginData data;

    /** Creates new form ResultPluginPanel */
    public ResultPluginPanel() {
	initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelHeader = new javax.swing.JLabel();
        jScrollPane = new javax.swing.JScrollPane();
        jTextAreaInfo = new javax.swing.JTextArea();
        jButtonDownload = new javax.swing.JButton();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(se.uu.bmc.it.batchelor.explorer.BatchelorExplorerApp.class).getContext().getResourceMap(ResultPluginPanel.class);
        jLabelHeader.setFont(resourceMap.getFont("jLabelHeader.font")); // NOI18N
        jLabelHeader.setIcon(resourceMap.getIcon("jLabelHeader.icon")); // NOI18N
        jLabelHeader.setText(resourceMap.getString("jLabelHeader.text")); // NOI18N
        jLabelHeader.setName("jLabelHeader"); // NOI18N

        jScrollPane.setName("jScrollPane"); // NOI18N

        jTextAreaInfo.setColumns(20);
        jTextAreaInfo.setEditable(false);
        jTextAreaInfo.setLineWrap(true);
        jTextAreaInfo.setRows(5);
        jTextAreaInfo.setText(resourceMap.getString("jTextAreaInfo.text")); // NOI18N
        jTextAreaInfo.setWrapStyleWord(true);
        jTextAreaInfo.setName("jTextAreaInfo"); // NOI18N
        jScrollPane.setViewportView(jTextAreaInfo);

        jButtonDownload.setText(resourceMap.getString("jButtonDownload.text")); // NOI18N
        jButtonDownload.setName("jButtonDownload"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelHeader, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonDownload))
            .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabelHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDownload, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDownload;
    private javax.swing.JLabel jLabelHeader;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JTextArea jTextAreaInfo;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setActive(boolean active) {
	setVisible(active);
    }

    @Override
    public void setPluginData(PluginData data) {
	this.data = data;
    }
}
