/*
 * PluginsDialog.java
 *
 * Created on Aug 17, 2010, 11:25:14 AM
 */
package se.uu.bmc.it.batchelor.explorer;

import java.awt.Component;
import java.util.Arrays;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import org.jdesktop.application.Application;
import org.jdesktop.application.ResourceMap;
import se.uu.bmc.it.batchelor.explorer.plugin.service.PluginService;
import se.uu.bmc.it.batchelor.explorer.plugin.spi.PluginInterface;
import se.uu.bmc.it.batchelor.explorer.plugin.spi.PluginType;

/**
 * Displays a table of all plug-ins.
 *
 * @author Anders LÃ¶vgren (QNET/BMC CompDept)
 */
public class PluginsDialog extends javax.swing.JDialog {

    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;
    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;

    /** Creates new form PluginsDialog */
    public PluginsDialog(java.awt.Frame parent, boolean modal) {
	super(parent, modal);
	initComponents();
	setContent();
    }

    /** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
    public int getReturnStatus() {
	return returnStatus;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jScrollPane = new javax.swing.JScrollPane();
        jTablePlugins = new javax.swing.JTable();
        jLabelHeader = new javax.swing.JLabel();

        setName("Form"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(se.uu.bmc.it.batchelor.explorer.BatchelorExplorerApp.class).getContext().getResourceMap(PluginsDialog.class);
        okButton.setText(resourceMap.getString("okButton.text")); // NOI18N
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(resourceMap.getString("cancelButton.text")); // NOI18N
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jScrollPane.setName("jScrollPane"); // NOI18N

        jTablePlugins.setBackground(resourceMap.getColor("jTablePlugins.background")); // NOI18N
        jTablePlugins.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Type", "Description", "Class"
            }
        ));
        jTablePlugins.setName("jTablePlugins"); // NOI18N
        jScrollPane.setViewportView(jTablePlugins);
        jTablePlugins.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("jTablePlugins.columnModel.title0")); // NOI18N
        jTablePlugins.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("jTablePlugins.columnModel.title1")); // NOI18N
        jTablePlugins.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("jTablePlugins.columnModel.title2")); // NOI18N
        jTablePlugins.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("jTablePlugins.columnModel.title3")); // NOI18N

        jLabelHeader.setIcon(resourceMap.getIcon("jLabelHeader.icon")); // NOI18N
        jLabelHeader.setText(resourceMap.getString("jLabelHeader.text")); // NOI18N
        jLabelHeader.setName("jLabelHeader"); // NOI18N
        jLabelHeader.setOpaque(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(359, Short.MAX_VALUE)
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton)
                .addContainerGap())
            .addComponent(jLabelHeader, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
            .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, okButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
	doClose(RET_OK);
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
	doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
	doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

    private void doClose(int retStatus) {
	returnStatus = retStatus;
	setVisible(false);
	dispose();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
	java.awt.EventQueue.invokeLater(new Runnable() {

	    @Override
	    public void run() {
		PluginsDialog dialog = new PluginsDialog(new javax.swing.JFrame(), true);
		dialog.addWindowListener(new java.awt.event.WindowAdapter() {

		    @Override
		    public void windowClosing(java.awt.event.WindowEvent e) {
			System.exit(0);
		    }
		});
		dialog.setVisible(true);
	    }
	});
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabelHeader;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JTable jTablePlugins;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables
    private int returnStatus = RET_CANCEL;

    private void setContent() {
	final ResourceMap resourceMap = Application.getInstance(se.uu.bmc.it.batchelor.explorer.BatchelorExplorerApp.class).getContext().getResourceMap(PluginsDialog.class);
	PluginService plugins = PluginService.getInstance();
	DefaultTableModel model = (DefaultTableModel) jTablePlugins.getModel();

	//
	// Custom renderer adding an icon in front of the cell text.
	//
	jTablePlugins.getColumnModel().getColumn(0).setCellRenderer(new DefaultTableCellRenderer() {

	    private ImageIcon icon = resourceMap.getImageIcon("jTablePlugins.icon");

	    @Override
	    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		setText((String) value);
		setIcon(icon);
		return this;
	    }
	});

	for (PluginInterface plugin : plugins) {
	    List<PluginType> provides = plugin.provides();
	    String types = Arrays.toString(provides.toArray());
	    Object[] data = new Object[]{
		plugin.getName(),
		types,
		plugin.getDescription(),
		plugin.getClass()
	    };
	    model.addRow(data);
	}
    }
}
